<launch>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find quadrotor)/worlds/IDAS_empty.world" />
		<arg name="paused" default="false" />
		<arg name="use_sim_time" default="true" />
		<arg name="gui" default="true" />
		<arg name="headless" default="false" />
		<arg name="debug" default="false" />
		<arg name="verbose" value="false" />
	</include>

	<group ns="quadrotor">
		<!-- Convert xacro and put on parameter server -->
		<param name="robot_description"
		       command="$(find xacro)xacro '$(find quadrotor)/urdf/IDAS_quadrotor.xacro'" />

		<!-- Spawn quadrotor into Gazebo -->
		<node name="spawn_urdf"
		      pkg="gazebo_ros"
		      type="spawn_model"
		      respawn="false"
		      output="screen"
		      args="-param robot_description -urdf -model quadrotor" />

		<!-- Load motor controller related parameters -->
		<rosparam file="$(find quadrotor)/config/controller_config.yaml"
		          command="load"
		          ns="/quadrotor" />

		<!-- Load parameters for quadrotor object -->
		<rosparam file="$(find quadrotor)/config/quadrotor_config.yaml"
		          command="load" />

		<!-- Load parameters for setpoint -->
		<rosparam file="$(find quadrotor)/config/setpoint_config.yaml"
		          command="load" />

		<!-- Spawn Motor Controller Node -->
		<node name="control_spawner"
		      pkg="controller_manager"
		      type="spawner"
		      respawn="false"
		      output="screen"
		      args="--namespace=/quadrotor joint_state_publisher motor_controller"/>

		<node name="joint_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	    respawn="false" output="screen">
	    <remap from="/joint_states" to="/quadrotor/joint_states" />
	  </node>
		<!-- Run Node to start quadrotor computation process -->
		<node name="quadrotor"
			  type="quadrotor_init.py"
		      pkg="quadrotor" />

		<!-- Run Node to publish setpoint states -->
		<node name="setpoint"
			    type="setpoint.py"
					pkg="quadrotor" />
	</group>
</launch>
