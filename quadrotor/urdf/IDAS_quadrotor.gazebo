<?xml version="1.0"?>

<robot>
	<gazebo reference="frame">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/Red</material>
	</gazebo>

	<gazebo reference="propeller_1">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/White</material>
	</gazebo>

	<gazebo reference="propeller_2">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/Black</material>
	</gazebo>

	<gazebo reference="propeller_3">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/Black</material>
	</gazebo>

	<gazebo reference="propeller_4">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/White</material>
	</gazebo>


	<gazebo reference="imu_link">
		<mu1>0</mu1>
		<mu2>0</mu2>
		<selfCollide>0</selfCollide>
		<material>Gazebo/Black</material>
		<gravity>true</gravity>
		<sensor name="imu_sensor" type="imu">
			<always_on>true</always_on>
			<update_rate>100</update_rate>
			<visualize>true</visualize>
			<topic>__default_topic__</topic>
			<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
				<topicName>imu</topicName>
				<bodyName>imu_link</bodyName>
				<updateRateHZ>10.0</updateRateHZ>
				<gaussianNoise>0.0</gaussianNoise>
				<xyzOffset>0 0 0</xyzOffset>
				<rpyOffset>0 0 0</rpyOffset>
				<frameName>imu_link</frameName>
				<initialOrientationAsReference>false</initialOrientationAsReference>
			</plugin>
			<pose>0 0 0 0 0 0</pose>
		</sensor>
	</gazebo>
	
	<gazebo>
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<alwaysOn>true</alwaysOn>
			<bodyName>frame</bodyName>
			<topicName>imu</topicName>
			<serviceName>imu_service</serviceName>
			<gaussianNoise>0.0</gaussianNoise>
			<updateRate>20.0</updateRate>
		</plugin>
	</gazebo>
<!-- ======================================================== -->
	<!-- Define the lift-Drag plugin -->
	<!-- for drag -->
	<!-- <gazebo>
		<plugin name="quad_body" filename="libUAVDynamicsPlugin.so">
			<type>drag</type>
			<cd>8.268e-2</cd>
			<frame_link>frame</frame_link>
		</plugin>
	</gazebo> -->

	<gazebo>
		<!-- Provide a Positive Velocity -->
		<plugin name="quad_prop1" filename="libUAVDynamicsPlugin.so">
			<type>thrust</type>
			<ct>1.276e-5</ct>
			<clockwise>0</clockwise>
			<propeller_link>propeller_1</propeller_link>
		</plugin>
	</gazebo>

	<gazebo>
		<!-- Provide a Negative Velocity -->
		<plugin name="quad_prop2" filename="libUAVDynamicsPlugin.so">
			<type>thrust</type>
			<ct>1.276e-5</ct>
			<clockwise>1</clockwise>
			<propeller_link>propeller_2</propeller_link>
		</plugin>
	</gazebo>

	<gazebo>
		<!-- Provide a Positive Velocity -->
		<plugin name="quad_prop3" filename="libUAVDynamicsPlugin.so">
			<type>thrust</type>
			<ct>1.276e-5</ct>
			<clockwise>0</clockwise>
			<propeller_link>propeller_3</propeller_link>
		</plugin>
	</gazebo>

	<gazebo>
		<!-- Provide a Negative Velocity -->
		<plugin name="quad_prop4" filename="libUAVDynamicsPlugin.so">
			<type>thrust</type>
			<ct>1.276e-5</ct>
			<clockwise>1</clockwise>
			<propeller_link>propeller_4</propeller_link>
		</plugin>
	</gazebo>

	<!-- ======================================================== -->
	<!-- Define ros_control plugin -->
		<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNameSpace>/quadrotor</robotNameSpace>
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>
	</gazebo>
</robot>
